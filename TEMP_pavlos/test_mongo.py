#!/usr/bin/env python3
#
# Author: Pavlos Sermpezis (https://sites.google.com/site/pavlossermpezis/)
#
import mongo_util as mng
import json
from time import time
from collections import defaultdict
from scipy import spatial
import numpy as np
from  sklearn.metrics import pairwise

LARGE_PATH_LENGTH = 20

DB = mng.get_mongo_db('pfx_distances')
pfx2peer = DB['pfx2peer']

# t = time()
# unique_pfx = pfx2peer.distinct('peer_ip')
# print(time()-t)
# print(unique_pfx)
# print(len(unique_pfx))
# with open('list_peer_ip.json', 'w') as f:
#     json.dump(unique_pfx,f)



with open('list_peer_ip.json', 'r') as f:
    unique_peers = json.load(f)

# peer1 = unique_pfx[0]
# print(peer1)
# dist1 = pfx2peer.find({'peer_ip':peer1},{ "_id":0, "pathlen": 1})
# for x in dist1:
#     print(x)
# print(list(dist1))


t = time()
print('Find pfx sample')
x = pfx2peer.aggregate([{'$project':{'_id':0,'pfx':1}},{'$sample': {'size': 1 } }])
print(time()-t)
t = time()
unique_set_of_pfx = set([i['pfx'] for i in x])
print(unique_set_of_pfx)

print('Find all entries for pfx')
d = defaultdict(dict)
for pfx in unique_set_of_pfx:
    cr = pfx2peer.find({'pfx':pfx},{'_id':0,'peer_ip':1,'pathlen':1})
    d[pfx] = {x['peer_ip']:x['pathlen'] for x in cr}
print(time()-t)
t = time()


print('Merge values')
D = defaultdict(list)
for pfx in d.keys():
    for p in unique_peers:
        D[p].append( d[pfx].get(p,LARGE_PATH_LENGTH) )
print(D)
print(time()-t)
t = time()

# d = {'102.67.56.1': 7, '103.102.5.1': 6, '103.212.68.10': 6, '104.218.61.163': 7, '12.0.1.63': 5, '130.117.255.1': 5, '147.75.35.135': 7, '154.11.12.212': 5, '161.129.152.2': 7, '165.16.221.66': 5, '165.254.255.2': 6, '176.12.110.8': 6, '178.208.11.4': 5, '185.138.53.0': 7, '185.193.84.191': 7, '185.197.132.7': 6, '185.210.224.254': 7, '185.223.213.254': 7, '193.0.0.56': 6, '193.138.216.164': 6, '193.148.249.191': 7, '193.150.22.240': 7, '193.160.39.1': 7, '194.25.5.148': 5, '194.50.92.251': 7, '194.50.94.1': 7, '194.50.99.254': 7, '195.47.235.100': 7, '198.58.198.252': 5, '2.56.11.1': 6, '202.69.160.152': 5, '203.119.104.1': 7, '203.123.48.6': 7, '208.51.134.248': 6, '208.80.153.193': 6, '217.151.205.144': 6, '23.129.32.61': 8, '23.139.160.31': 7, '2a01:4f8:c17:ec87::310c:46de': 7, '2a0c:b641:402::1': 8, '31.169.49.228': 6, '43.251.115.197': 6, '45.116.179.212': 6, '45.14.68.69': 7, '45.146.4.16': 6, '45.154.96.254': 8, '45.61.0.85': 5, '49.12.70.222': 7, '5.178.95.254': 6, '5.255.90.109': 6, '64.246.96.5': 6, '72.22.223.9': 7, '80.77.16.114': 6, '89.234.186.6': 6, '91.212.242.251': 7, '93.159.141.1': 6, '93.159.187.1': 6, '94.177.122.233': 7, '94.177.122.242': 7, '94.177.122.251': 6, '94.247.111.254': 8, '195.66.224.111': 6, '195.66.224.137': 5, '195.66.224.138': 5, '195.66.224.167': 5, '195.66.224.175': 6, '195.66.224.81': 6, '195.66.224.89': 5, '195.66.225.216': 6, '195.66.225.32': 6, '195.66.225.35': 5, '195.66.225.48': 6, '195.66.226.113': 6, '195.66.226.13': 5, '195.66.226.212': 7, '195.66.226.31': 6, '195.66.226.38': 5, '195.66.226.84': 7, '195.66.226.97': 6, '195.66.227.104': 6, '195.66.227.120': 8, '195.66.227.148': 5, '195.66.227.163': 5, '195.66.227.193': 6, '195.66.227.195': 6, '195.66.227.90': 6, '5.57.80.113': 6, '5.57.80.210': 6, '5.57.81.186': 6, '5.57.81.21': 6, '5.57.81.216': 6, '5.57.81.76': 6, '193.239.117.127': 7, '193.239.117.18': 6, '193.239.117.69': 7, '193.239.118.106': 6, '193.239.118.216': 6, '193.239.118.220': 7, '2001:7f8:13::a500:3280:1': 7, '80.249.208.106': 5, '80.249.208.111': 5, '80.249.208.149': 6, '80.249.208.200': 6, '80.249.208.209': 6, '80.249.208.34': 6, '80.249.209.145': 6, '80.249.209.167': 4, '80.249.209.176': 6, '80.249.209.53': 6, '80.249.210.150': 5, '80.249.210.153': 5, '80.249.210.156': 6, '80.249.210.163': 6, '80.249.210.208': 6, '80.249.210.70': 6, '80.249.210.78': 5, '80.249.210.85': 6, '80.249.210.99': 7, '80.249.211.161': 5, '80.249.211.217': 6, '80.249.211.237': 6, '80.249.213.102': 6, '80.249.213.107': 7, '192.65.185.140': 6, '192.65.185.142': 6, '192.65.185.157': 6, '192.65.185.195': 6, '192.65.185.244': 6, '192.65.185.3': 6, '193.203.0.157': 6, '193.203.0.182': 6, '193.203.0.19': 6, '193.203.0.192': 5, '193.203.0.213': 6, '193.203.0.245': 6, '193.203.0.45': 6, '193.203.0.63': 7, '193.203.0.91': 6, '202.249.2.169': 5, '202.249.2.185': 6, '202.249.2.20': 6, '194.68.123.136': 6, '194.68.123.157': 5, '194.68.123.18': 6, '194.68.123.191': 6, '194.68.123.226': 5, '194.68.123.69': 7, '217.29.66.10': 6, '217.29.66.102': 6, '217.29.66.120': 6, '217.29.66.127': 6, '217.29.66.158': 5, '217.29.66.225': 6, '217.29.66.233': 7, '217.29.66.4': 6, '217.29.66.5': 6, '217.29.66.65': 6, '217.29.66.86': 6, '217.29.66.88': 6, '217.29.67.13': 7, '217.29.67.24': 6, '217.29.67.51': 5, '217.29.67.54': 6, '217.29.67.55': 6, '217.29.67.74': 6, '198.32.160.103': 6, '198.32.160.12': 6, '198.32.160.137': 6, '198.32.160.168': 6, '198.32.160.170': 5, '198.32.160.182': 5, '198.32.160.242': 5, '198.32.160.39': 6, '198.32.160.42': 5, '198.32.160.58': 6, '2001:7f8::30b6:0:1': 6, '80.81.192.121': 5, '80.81.192.13': 6, '80.81.192.162': 6, '80.81.192.175': 6, '80.81.192.194': 5, '80.81.192.222': 6, '80.81.192.231': 7, '80.81.192.244': 6, '80.81.192.46': 5, '80.81.193.139': 6, '80.81.193.141': 5, '80.81.193.18': 5, '80.81.193.194': 6, '80.81.193.252': 5, '80.81.193.65': 6, '80.81.194.100': 5, '80.81.194.119': 6, '80.81.194.131': 6, '80.81.194.140': 6, '80.81.194.186': 6, '80.81.194.45': 7, '80.81.194.59': 6, '80.81.195.14': 7, '80.81.195.143': 6, '80.81.195.146': 8, '80.81.195.166': 6, '80.81.195.171': 7, '80.81.195.178': 7, '80.81.195.219': 7, '80.81.195.241': 7, '80.81.195.35': 6, '80.81.195.98': 6, '80.81.196.156': 6, '80.81.196.189': 6, '80.81.196.197': 6, '80.81.196.225': 7, '195.208.208.147': 6, '195.208.208.223': 6, '195.208.208.36': 7, '195.208.209.109': 5, '195.208.209.200': 6, '195.208.209.4': 6, '195.208.209.66': 6, '195.208.209.93': 6, '195.208.210.33': 6, '195.208.210.52': 6, '198.32.176.14': 5, '198.32.176.147': 5, '198.32.176.164': 6, '198.32.176.177': 6, '198.32.176.214': 6, '198.32.176.226': 5, '198.32.176.24': 5, '198.32.176.3': 5, '198.32.176.70': 5, '187.16.208.144': 5, '187.16.210.177': 7, '187.16.210.50': 6, '187.16.216.102': 6, '187.16.216.121': 6, '187.16.217.110': 6, '187.16.217.161': 5, '187.16.217.17': 7, '187.16.217.186': 6, '187.16.217.48': 6, '187.16.217.59': 6, '187.16.219.162': 6, '187.16.219.51': 6, '187.16.220.216': 6, '187.16.220.80': 6, '187.16.222.107': 6, '187.16.222.229': 6, '187.16.222.45': 6, '187.16.223.133': 6, '198.32.242.254': 6, '198.32.242.55': 6, '198.32.243.133': 5, '198.32.243.181': 6, '198.32.243.219': 7, '193.242.98.141': 6, '196.60.8.152': 5, '196.60.8.185': 7, '196.60.8.190': 6, '196.60.8.22': 7, '196.60.8.60': 6, '196.60.9.188': 6, '197.157.79.173': 5, '2001:7f8:24::c7': 7, '91.206.52.103': 7, '91.206.52.109': 6, '91.206.52.116': 6, '91.206.52.117': 6, '91.206.52.126': 7, '91.206.52.127': 7, '91.206.52.130': 6, '91.206.52.141': 7, '91.206.52.149': 6, '91.206.52.15': 6, '91.206.52.157': 7, '91.206.52.17': 6, '91.206.52.177': 6, '91.206.52.180': 6, '91.206.52.197': 6, '91.206.52.205': 5, '91.206.52.236': 6, '91.206.52.246': 7, '91.206.52.32': 7, '91.206.52.38': 6, '91.206.52.40': 6, '91.206.52.5': 6, '91.206.52.57': 6, '91.206.52.60': 7, '91.206.52.68': 7, '91.206.52.9': 6, '91.206.52.90': 6, '91.206.53.12': 6, '2001:7f8:54::1:204': 7, '37.49.232.7': 6, '37.49.236.1': 6, '37.49.236.123': 6, '37.49.236.15': 7, '37.49.236.156': 6, '37.49.236.172': 6, '37.49.236.177': 6, '37.49.236.205': 5, '37.49.236.228': 5, '37.49.236.246': 7, '37.49.236.249': 6, '37.49.236.32': 6, '37.49.236.34': 7, '37.49.236.36': 6, '37.49.236.61': 5, '37.49.236.97': 6, '37.49.237.143': 5, '37.49.237.175': 6, '37.49.237.194': 6, '37.49.237.228': 6, '37.49.237.46': 5, '37.49.237.83': 6, '86.104.125.53': 7, '86.104.125.59': 7, '86.104.125.93': 6, '27.111.228.186': 5, '27.111.228.201': 5, '27.111.228.222': 6, '27.111.228.43': 5, '27.111.228.6': 6, '27.111.230.35': 6, '103.200.115.1': 6, '138.122.60.1': 6, '154.11.15.28': 5, '168.195.131.1': 6, '177.221.140.1': 7, '38.19.140.162': 6, '45.183.45.1': 7, '45.65.244.1': 7, '5.188.4.211': 7, '185.115.244.25': 6, '193.43.214.253': 6, '194.28.99.120': 7, '194.50.19.118': 8, '217.76.0.17': 7, '91.132.202.2': 6}
print('Calculate similarity matrix')
cosine_similarity = lambda x,y : 1.0-spatial.distance.cosine(x,y)
euclidean_similarity = lambda x,y : 1-pairwise.euclidean_distances(np.array(x).reshape(1,-1),np.array(y).reshape(1,-1))/(len(x)*LARGE_PATH_LENGTH)
sim = np.zeros((len(unique_peers),len(unique_peers)))
np.fill_diagonal(sim,1)
for i, p1 in enumerate(unique_peers):
    for j, p2 in enumerate(unique_peers):
        if j<i:
            sim[i,j] = sim[j,i]
        else:
            # sim[i,j] = euclidean_similarity([d[p1]],[d[p2]])
            sim[i,j] = euclidean_similarity(D[p1],D[p2])
print(sim)
print(time()-t)
t = time()






exit()

import pymongo

myclient = pymongo.MongoClient("mongodb://localhost:27017/")

mydb = myclient["mydatabase"]
mycol = mydb["customers"]

# mydict1 = { "name": "John", "address": "Highway 37" }
# # x = mycol.insert_one(mydict)

# mydict2 = { "name": "Peter", "address": "Lowstreet 27" }
# # x = mycol.insert_one(mydict)

# x = mycol.insert_many([mydict1, mydict2])


# print(x.inserted_ids) 

# print(myclient.list_database_names())
# print(mydb.list_collection_names())


# dblist = myclient.list_database_names()
# if "mydatabase" in dblist:
#     print("The database exists.")


# collist = mydb.list_collection_names()
# if "customers" in collist:
#     print("The collection exists.")



# x = mycol.find_one()
# print(x)



for x in mycol.find():
# for x in mycol.find({},{ "_id": 0, "name": 1, "address": 1 }):
# for x in mycol.find({},{"name": 1, "address": 0 }):
# for x in mycol.find({},{ "name": 0}):
    print(x) 


myquery = { "address": "Park Lane 38" }
myquery = { "address": { "$gt": "H" } }
mydoc = mycol.find(myquery,{ "_id": 0, "name": 1, "address": 1 }).sort("name",-1).limit(1)

# mydoc = mycol.find().sort("name")
# sort("name", 1) #ascending
# sort("name", -1) #descending 

# for x in mydoc:
#     print(x) 




myquery = { "address": "Valley 1" }
newvalues = { "$set": { "address": "Canyon 123" } }

mycol.update_one(myquery, newvalues,upsert=True)



for x in mycol.find():
# for x in mycol.find({},{ "_id": 0, "name": 1, "address": 1 }):
# for x in mycol.find({},{"name": 1, "address": 0 }):
# for x in mycol.find({},{ "name": 0}):
    print(x) 